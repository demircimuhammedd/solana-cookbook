import{_ as p,r as o,o as c,c as l,a as n,b as e,F as i,d as s,e as t}from"./app.55b1b60c.js";const r={},u=n("h1",{id:"orao-vrf",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#orao-vrf","aria-hidden":"true"},"#"),s(" ORAO VRF")],-1),k=n("p",null,"ORAO VRF ist ein von mehreren Parteien verifizierbares Zufallsfunktionsorakel, das auf EDDSA basiert. Es ist in der Lage, bereitzustellen 64 Bytes \xFCberpr\xFCfbare Zuf\xE4lligkeit als Antwort auf eine Zuf\xE4lligkeitsanforderung.",-1),d=n("h2",{id:"grundlegendes-nutzungsszenario",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#grundlegendes-nutzungsszenario","aria-hidden":"true"},"#"),s(" Grundlegendes Nutzungsszenario")],-1),m=n("li",null,[s("Erstellen Sie eine neue Zuf\xE4lligkeitsanforderung. "),n("ul",null,[n("li",null,[s("F\xFCr diese Operation muss ein eindeutiger "),n("em",null,"Seed"),s(" vom Client angegeben werden. Dieser Startwert wird f\xFCr die Zuf\xE4lligkeitspr\xFCfung verwendet.")])])],-1),b=n("li",null,[s("Verwenden Sie die generierte Zuf\xE4lligkeit, sobald die Anfrage erf\xFCllt ist. "),n("ul",null,[n("li",null,"Oracle wird neuen Anfragen so schnell wie m\xF6glich nachkommen, dieses Verfahren enth\xE4lt den \xDCberpr\xFCfungsschritt, sollte also keine unbest\xE4tigte Zuf\xE4lligkeit aufweisen erscheinen in der Kette.")])],-1),f=s("(Optional) \xDCberpr\xFCfen Sie die generierte Zuf\xE4lligkeit au\xDFerhalb der Kette. "),h=s("Sie k\xF6nnen "),_={href:"https://github.com/orao-network/solana-vrf/blob/6cc9a80ec280b96a97321b8bfe2904a6e432c38e/rust/examples/off-chain/src/main.rs#L48",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"erzeugte Zuf\xE4lligkeit verifizieren",-1),v=s(" gegen die wirksame Liste von Erf\xFCllungsbeh\xF6rden (es ist ein Teil des \xF6ffentlich zug\xE4nglichen VRF Aufbau). In SDKs gibt es daf\xFCr Helfer."),y=n("h2",{id:"sdks-software-developer-kits-software-entwicklungs-packet",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sdks-software-developer-kits-software-entwicklungs-packet","aria-hidden":"true"},"#"),s(" SDKs (Software Developer Kits - Software-entwicklungs-packet)")],-1),w=n("p",null,"Es sind zwei SDKs verf\xFCgbar:",-1),S=s("Die Kiste "),C={href:"https://docs.rs/orao-solana-vrf",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"orao-solana-vrf",-1),R=s(" \u2013 der folgende Code basiert auf diesem Rust SDK."),z=s("Das JS SDK \u2013 JavaScript SDK sowie der Quellcode des Rust SDK sind \xF6ffentlich verf\xFCgbar Repository auf GitHub "),x={href:"https://github.com/orao-network/solana-vrf",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"solana-vrf",-1),E=s(". Alle Tests innerhalb Dieses Repo basiert auf dem JavaScript SDK."),V=n("h2",{id:"anatomie-einer-zufalligkeitsanforderung",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#anatomie-einer-zufalligkeitsanforderung","aria-hidden":"true"},"#"),s(" Anatomie einer Zuf\xE4lligkeitsanforderung")],-1),I=s("Die Struktur "),P={href:"https://docs.rs/orao-solana-vrf/latest/orao_solana_vrf/state/struct.Randomness.html",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"RandomnessRequest",-1),K=s(" wird verwendet, um die angeforderte Zuf\xE4lligkeit zu speichern:"),q=n("ul",null,[n("li",null,"\u201ESeed\u201C-Feld \u2013 speichert den Anforderungs-Seed"),n("li",null,"\u201ERandomness\u201C-Feld \u2013 das ist das Interessenfeld, das die erf\xFCllte Zuf\xE4lligkeit speichert. Es wird auf Null gesetzt, bis die Zuf\xE4lligkeitsanforderung erf\xFCllt ist."),n("li",null,"Feld \u201EAntworten\u201C \u2013 Sie k\xF6nnen sich dieses Feld ansehen, falls Sie bereit sind, au\xDFerhalb der Kette aufzutreten Verifizierung (hierf\xFCr gibt es Helfer in beiden SDKs)")],-1),Z=n("h2",{id:"anatomie-einer-vrf-konfiguration",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#anatomie-einer-vrf-konfiguration","aria-hidden":"true"},"#"),s(" Anatomie einer VRF-Konfiguration")],-1),N=s("Die Struktur "),O={href:"https://docs.rs/orao-solana-vrf/latest/orao_solana_vrf/state/struct.NetworkState.html",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"NetworkState",-1),T=s(" enth\xE4lt die On-Chain-VRF-Daten. Hier sprechen wir \xFCber seine "),L=n("code",null,"config",-1),H=s(", Feld, das die "),G={href:"https://docs.rs/orao-solana-vrf/latest/orao_solana_vrf/state/struct.NetworkConfiguration.html",target:"_blank",rel:"noopener noreferrer"},U=n("code",null,"NetworkConfiguration",-1),J=s(" speichert. Folgende Bereiche k\xF6nnten f\xFCr Sie interessant sein:"),M=n("ul",null,[n("li",null,[n("code",null,"request_fee"),s(" \u2013 Zuf\xE4lligkeitsanfrage kostet so viele Lamports")]),n("li",null,[n("code",null,"fulfillment_authorities"),s(" \u2013 \xF6ffentliche Schl\xFCssel der Erf\xFCllungsbeh\xF6rden")]),n("li",null,[n("code",null,"token_fee_cofig"),s(" - wenn definiert, dann ist es m\xF6glich, Geb\xFChren in SPL statt in SOL zu zahlen")])],-1),W=n("h2",{id:"rust-natives-beispiel",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rust-natives-beispiel","aria-hidden":"true"},"#"),s(" Rust-natives Beispiel")],-1),Q=s("Dieser Abschnitt veranschaulicht die Off-Chain-Nutzung ("),Y={href:"https://github.com/orao-network/solana-vrf/tree/master/rust/examples/off-chain",target:"_blank",rel:"noopener noreferrer"},j=s("vollst\xE4ndiger Code ist auf GitHub verf\xFCgbar"),X=s(")"),$=n("h3",{id:"_1-stellen-sie-die-verbindung-her",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-stellen-sie-die-verbindung-her","aria-hidden":"true"},"#"),s(" 1. Stellen Sie die Verbindung her")],-1),nn=s("Rust SDK basiert auf der "),sn={href:"https://docs.rs/anchor-client",target:"_blank",rel:"noopener noreferrer"},an=n("code",null,"anchor-client",-1),en=s("-Bibliothek, daher ben\xF6tigen Sie sie, um die "),tn=n("code",null,"Program",-1),pn=s("-Instanz zu erwerben, um sie zu verwenden:"),on=t(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> payer<span class="token punctuation">:</span> <span class="token class-name">Keypair</span> <span class="token operator">=</span> <span class="token punctuation">..</span><span class="token punctuation">;</span> <span class="token comment">// get this from the solana configuration</span>
<span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">Client</span><span class="token punctuation">::</span><span class="token function">new_with_options</span><span class="token punctuation">(</span><span class="token class-name">Cluster</span><span class="token punctuation">::</span><span class="token class-name">Devnet</span><span class="token punctuation">,</span> <span class="token class-name">Rc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>payer<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CommitmentConfig</span><span class="token punctuation">::</span><span class="token function">finalized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> program <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">program</span><span class="token punctuation">(</span><span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span></span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-erstellen-sie-eine-anfrage" tabindex="-1"><a class="header-anchor" href="#_2-erstellen-sie-eine-anfrage" aria-hidden="true">#</a> 2. Erstellen Sie eine Anfrage</h3>`,2),cn=s("Daf\xFCr gibt es einen praktischen "),ln={href:"https://docs.rs/orao-solana-vrf/latest/orao_solana_vrf/struct.RequestBuilder.html",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"RequestBuilder",-1),un=s(":"),kn=t(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> seed <span class="token operator">=</span> <span class="token namespace">rand<span class="token punctuation">::</span></span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> tx <span class="token operator">=</span> <span class="token class-name">RequestBuilder</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>program<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Randomness request&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">send_with_spinner_and_config</span><span class="token punctuation">(</span><span class="token class-name">RpcSendTransactionConfig</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Transaction hash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_3-warte-auf-die-erfullung" tabindex="-1"><a class="header-anchor" href="#_3-warte-auf-die-erfullung" aria-hidden="true">#</a> 3. Warte auf die Erf\xFCllung</h3><p>Es gibt mehrere M\xF6glichkeiten, auf die Erf\xFCllung zu warten, einschlie\xDFlich Pub-Sub, aber dieses Beispiel wird eine einfache Schleife verwenden:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> randomness_address <span class="token operator">=</span> <span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span></span><span class="token function">randomness_account_address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>seed<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> randomness_account <span class="token operator">=</span> <span class="token keyword">loop</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> program<span class="token punctuation">.</span><span class="token function">account</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">Randomness</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>randomness_address<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>randomness<span class="token punctuation">)</span> <span class="token keyword">if</span> randomness<span class="token punctuation">.</span><span class="token function">fulfilled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_some</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">break</span> randomness<span class="token punctuation">,</span>
        _ <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token namespace">std<span class="token punctuation">::</span>thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_secs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Randomness for seed {:?} is fulfilled with {:?}&quot;</span><span class="token punctuation">,</span> seed<span class="token punctuation">,</span> randomness_account<span class="token punctuation">.</span>randomness<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="cpi-beispiel" tabindex="-1"><a class="header-anchor" href="#cpi-beispiel" aria-hidden="true">#</a> CPI-Beispiel</h2>`,5),dn=s("CPI ist eine Abk\xFCrzung f\xFCr Cross Program Invocation \u2013 eine M\xF6glichkeit f\xFCr einen Vertrag innerhalb einer einzigen Transaktion, einen anderen Vertrag aufzurufen. Dieser Abschnitt soll dies veranschaulichen ("),mn={href:"https://github.com/orao-network/solana-vrf/tree/master/rust/examples/cpi",target:"_blank",rel:"noopener noreferrer"},bn=s("vollst\xE4ndiger Code ist auf GitHub verf\xFCgbar"),fn=s(")."),hn=n("p",null,"Der Vertrag, den wir zur Veranschaulichung des CPI verwenden, ist ein einfaches Einzelspieler-Russisch-Roulette, bei dem das Ergebnis einer Runde ergibt sich aus einer erf\xFCllten Zuf\xE4lligkeit.",-1),_n=n("p",null,[n("em",null,"Hinweis:"),s(" Die Zuf\xE4lligkeit wird f\xFCr Ihren Vertrag nicht sofort verf\xFCgbar sein, also m\xFCssen Sie es so zu gestalten, dass es auf die Erf\xFCllung der Zuf\xE4lligkeit wartet. In unserem Beispiel ein Spieler nicht in der Lage sein, eine weitere Runde zu beginnen, bis die aktuelle beendet ist (bis die Randomness erf\xFCllt ist).")],-1),gn=n("h3",{id:"_1-erstellen-sie-den-vertrag",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-erstellen-sie-den-vertrag","aria-hidden":"true"},"#"),s(" 1. Erstellen Sie den Vertrag")],-1),vn=s("Dieses Beispiel basiert auf dem "),yn={href:"https://github.com/coral-xyz/anchor",target:"_blank",rel:"noopener noreferrer"},wn=s("Anchor Framework"),Sn=s(". Bitte konsultieren Sie das "),Cn={href:"https://book.anchor-lang.com/",target:"_blank",rel:"noopener noreferrer"},An=s("Anchor Buch"),Rn=s(", um zu erfahren, wie Sie einen Vertrag erstellen."),zn=t(`<p>Um einen CPI-Aufruf durchzuf\xFChren, m\xFCssen Sie das orao VRF rust SDK mit der \u201Ecpi\u201C-Funktion hinzuf\xFCgen in die Liste Ihrer Abh\xE4ngigkeiten:</p><div class="language-toml ext-toml line-numbers-mode"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token comment"># ...</span>
<span class="token key property">orao-solana-vrf</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.2.3&quot;</span><span class="token punctuation">,</span> <span class="token key property">default-features</span> <span class="token punctuation">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;cpi&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-sammeln-sie-die-erforderlichen-konten" tabindex="-1"><a class="header-anchor" href="#_2-sammeln-sie-die-erforderlichen-konten" aria-hidden="true">#</a> 2. Sammeln Sie die erforderlichen Konten</h3><p>Jede Solana-Anweisung erfordert eine ordnungsgem\xE4\xDFe Kontenliste. Wir m\xFCssen die Anfrage anrufen Anleitung, hier ist die Liste der erforderlichen Konten:</p><ul><li>Zahler \u2013 VRF-Kunde</li><li>network_state \u2013 VRF-On-Chain-Statusadresse</li><li>Schatzkammer - Adresse der VRF-Schatzkammer (aus dem VRF-On-Chain-Zustand entnommen)</li><li>Anfrage - PDA zum Speichern der Zuf\xE4lligkeit (abgeleitet vom Seed)</li><li>system_program \u2013 erforderlich, um das Anforderungskonto zu erstellen</li></ul><p>Oben bedeutet, dass unsere Anweisung alle diese Konten neben ihren eigenen Konten ben\xF6tigt. Insbesondere f\xFCr unsere Russisch-Roulette-Anleitung ben\xF6tigen Sie die folgende Kontenliste:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Accounts)]</span>
#<span class="token punctuation">[</span><span class="token function">instruction</span><span class="token punctuation">(</span>force<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">SpinAndPullTheTrigger</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">/// Player will be the \`payer\` account in the CPI call.</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    player<span class="token punctuation">:</span> <span class="token class-name">Signer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// This is the player state account, it is required by Russian-Roulette to store player data</span>
    <span class="token comment">// (number of rounds played and info to derive the last round outcome)</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        init_if_needed<span class="token punctuation">,</span>
        payer <span class="token operator">=</span> player<span class="token punctuation">,</span>
        space <span class="token operator">=</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token class-name">PlayerState</span><span class="token punctuation">::</span><span class="token constant">SIZE</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token constant">PLAYER_STATE_ACCOUNT_SEED</span><span class="token punctuation">,</span>
            player<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    player_state<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">PlayerState</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// This account points to the last VRF request, it is necessary to validate that the player</span>
    <span class="token comment">/// is alive and is able to play another round.</span>
    <span class="token comment">/// CHECK:</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">RANDOMNESS_ACCOUNT_SEED</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> player_state<span class="token punctuation">.</span>force<span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        <span class="token namespace">seeds<span class="token punctuation">::</span></span>program <span class="token operator">=</span> <span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span></span><span class="token constant">ID</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    prev_round<span class="token punctuation">:</span> <span class="token class-name">AccountInfo</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// This account is the current VRF request account, it&#39;ll be the \`request\` account in the CPI call.</span>
    <span class="token comment">/// CHECK:</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">RANDOMNESS_ACCOUNT_SEED</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>force<span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        <span class="token namespace">seeds<span class="token punctuation">::</span></span>program <span class="token operator">=</span> <span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span></span><span class="token constant">ID</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>
    random<span class="token punctuation">:</span> <span class="token class-name">AccountInfo</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// VRF treasury account, it&#39;ll be the \`treasury\` account in the CPI call.</span>
    <span class="token comment">/// CHECK:</span>
    <span class="token attribute attr-name">#[account(mut)]</span>
    treasury<span class="token punctuation">:</span> <span class="token class-name">AccountInfo</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    #<span class="token punctuation">[</span><span class="token function">account</span><span class="token punctuation">(</span>
        <span class="token keyword">mut</span><span class="token punctuation">,</span>
        seeds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">CONFIG_ACCOUNT_SEED</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        bump<span class="token punctuation">,</span>
        <span class="token namespace">seeds<span class="token punctuation">::</span></span>program <span class="token operator">=</span> <span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span></span><span class="token constant">ID</span>
    <span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token comment">/// VRF on-chain state account, it&#39;ll be the \`network_state\` account in the CPI call.</span>
    config<span class="token punctuation">:</span> <span class="token class-name">Account</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">NetworkState</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// VRF program address to invoke CPI</span>
    vrf<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">OraoVrf</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>

    <span class="token comment">/// System program address to create player_state and to be used in CPI call.</span>
    system_program<span class="token punctuation">:</span> <span class="token class-name">Program</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;info</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br></div></div><h3 id="_3-fuhren-sie-einen-cpi-aufruf-durch" tabindex="-1"><a class="header-anchor" href="#_3-fuhren-sie-einen-cpi-aufruf-durch" aria-hidden="true">#</a> 3. F\xFChren Sie einen CPI-Aufruf durch</h3>`,8),xn=s("Im Anchor Framework gibt es daf\xFCr einen "),Dn=n("code",null,"CpiContext",-1),En=s(" (bitte konsultieren der "),Vn={href:"https://book.anchor-lang.com/anchor_in_depth/CPIs.html",target:"_blank",rel:"noopener noreferrer"},In=s("entsprechende Abschnitt"),Pn=s(" des Ankerbuchs):"),Fn=t(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> cpi_program <span class="token operator">=</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>vrf<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> cpi_accounts <span class="token operator">=</span> <span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span>cpi<span class="token punctuation">::</span>accounts<span class="token punctuation">::</span></span><span class="token class-name">Request</span> <span class="token punctuation">{</span>
    payer<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    network_state<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    treasury<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>treasury<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    request<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>random<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    system_program<span class="token punctuation">:</span> ctx<span class="token punctuation">.</span>accounts<span class="token punctuation">.</span>system_program<span class="token punctuation">.</span><span class="token function">to_account_info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> cpi_ctx <span class="token operator">=</span> <span class="token namespace">anchor_lang<span class="token punctuation">::</span>context<span class="token punctuation">::</span></span><span class="token class-name">CpiContext</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>cpi_program<span class="token punctuation">,</span> cpi_accounts<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token namespace">orao_solana_vrf<span class="token punctuation">::</span>cpi<span class="token punctuation">::</span></span><span class="token function">request</span><span class="token punctuation">(</span>cpi_ctx<span class="token punctuation">,</span> force<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_4-nutzen-sie-die-erfullte-zufalligkeit" tabindex="-1"><a class="header-anchor" href="#_4-nutzen-sie-die-erfullte-zufalligkeit" aria-hidden="true">#</a> 4. Nutzen Sie die erf\xFCllte Zuf\xE4lligkeit</h3><p>Unser Vertrag leitet das Rundenergebnis aus der erf\xFCllten Zuf\xE4lligkeit ab, rundenbetrachtet in Bearbeitung, wenn Zuf\xE4lligkeit noch nicht erf\xFCllt ist:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">/// Last round outcome.</span>
<span class="token attribute attr-name">#[derive(Debug, Clone, Copy, PartialEq, Eq)]</span>
<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">CurrentState</span> <span class="token punctuation">{</span>
    <span class="token comment">/// Player is alive and able to play.</span>
    <span class="token class-name">Alive</span><span class="token punctuation">,</span>
    <span class="token comment">/// Player is dead and can&#39;t play anymore.</span>
    <span class="token class-name">Dead</span><span class="token punctuation">,</span>
    <span class="token comment">/// Player is waiting for current round to finish.</span>
    <span class="token class-name">Playing</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">/// Derives last round outcome.</span>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">current_state</span><span class="token punctuation">(</span>randomness<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Randomness</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">CurrentState</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>randomness<span class="token punctuation">)</span> <span class="token operator">=</span> randomness<span class="token punctuation">.</span><span class="token function">fulfilled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token function">is_dead</span><span class="token punctuation">(</span>randomness<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">CurrentState</span><span class="token punctuation">::</span><span class="token class-name">Dead</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">CurrentState</span><span class="token punctuation">::</span><span class="token class-name">Alive</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">CurrentState</span><span class="token punctuation">::</span><span class="token class-name">Playing</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/// Decides whether player is dead or alive.</span>
<span class="token keyword">fn</span> <span class="token function-definition function">is_dead</span><span class="token punctuation">(</span>randomness<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">;</span> <span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
    <span class="token comment">// use only first 8 bytes for simplicyty</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> randomness<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span><span class="token function">size_of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">u64</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">try_into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">u64</span><span class="token punctuation">::</span><span class="token function">from_le_bytes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">6</span> <span class="token operator">==</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,4);function Kn(qn,Zn){const a=o("ExternalLinkIcon");return c(),l(i,null,[u,k,d,n("ol",null,[m,b,n("li",null,[f,n("ul",null,[n("li",null,[h,n("a",_,[g,e(a)]),v])])])]),y,w,n("ol",null,[n("li",null,[S,n("a",C,[A,e(a)]),R]),n("li",null,[z,n("a",x,[D,e(a)]),E])]),V,n("p",null,[I,n("a",P,[F,e(a)]),K]),q,Z,n("p",null,[N,n("a",O,[B,e(a)]),T,L,H,n("a",G,[U,e(a)]),J]),M,W,n("p",null,[Q,n("a",Y,[j,e(a)]),X]),$,n("p",null,[nn,n("a",sn,[an,e(a)]),en,tn,pn]),on,n("p",null,[cn,n("a",ln,[rn,e(a)]),un]),kn,n("p",null,[dn,n("a",mn,[bn,e(a)]),fn]),hn,_n,gn,n("p",null,[vn,n("a",yn,[wn,e(a)]),Sn,n("a",Cn,[An,e(a)]),Rn]),zn,n("p",null,[xn,Dn,En,n("a",Vn,[In,e(a)]),Pn]),Fn],64)}var On=p(r,[["render",Kn]]);export{On as default};
